{"version":3,"file":"table.js","sourceRoot":"","sources":["../../../src/components/table.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAGpD,IAAM,KAAK,GAAX,MAAM,KAAM,SAAQ,UAAU;IAA9B;;QAEL,UAAK,GAAU,EAAE,CAAC;IA8DpB,CAAC;IAhCC,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC3C,OAAO,IAAI,CAAA;;;;OAIV,CAAC;QACJ,CAAC;QAED,OAAO,IAAI,CAAA;;;;;cAKD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAA;oBACpC,GAAG;aACV,CAAC;;;;YAIF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAA;;gBAEvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAA;sBAC3B,IAAI,CAAC,GAAG,CAAC;eAChB,CAAC;;WAEL,CAAC;;;;KAIP,CAAC;IACJ,CAAC;;AA3DM,YAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BlB,AA1BY,CA0BX;AA5BF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;oCACR;AAFP,KAAK;IADjB,aAAa,CAAC,WAAW,CAAC;GACd,KAAK,CAgEjB","sourcesContent":["import {css, html, LitElement} from 'lit';\nimport {customElement, property } from 'lit/decorators.js';\n\n@customElement('web-table')\nexport class Table extends LitElement {\n  @property({ type: Array })\n  items: any[] = [];\n\n  static styles = css`\n    .table-container {\n      max-height: 65vh;\n      overflow-y: scroll;\n      border: 1px solid #ccc;\n    }\n\n    table {\n      border: 1px solid #ccc;\n      border-collapse: collapse;\n      width: 100%;\n    }\n\n    tr, th, td {\n      border: 1px solid #ccc;\n    }\n\n    th, td {\n      padding: 12px;\n    }\n\n    @media only screen and (max-width: 600px) {\n      .table-container {\n        width: 400px;\n      }\n    }\n  `;\n\n  render() {\n    if (!this.items || this.items.length === 0) {\n      return html`\n        <div class=\"table-container\">\n          <p>No data available</p>\n        </div>\n      `;\n    }\n\n    return html`\n      <div class=\"table-container\">\n        <table>\n          <thead>\n          <tr>\n            ${Object.keys(this.items[0]).map(key => html`\n              <th>${key}</th>\n            `)}\n          </tr>\n          </thead>\n          <tbody>\n          ${this.items.map(item => html`\n            <tr>\n              ${Object.keys(item).map(key => html`\n                <td>${item[key]}</td>\n              `)}\n            </tr>\n          `)}\n          </tbody>\n        </table>\n      </div>\n    `;\n  }\n}\n"]}