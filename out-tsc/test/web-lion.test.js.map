{"version":3,"file":"web-lion.test.js","sourceRoot":"","sources":["../../test/web-lion.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,oBAAoB,CAAA;AAE3B,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,EAAE,GAAG,MAAM,OAAO,CAAM,IAAI,CAAA,uBAAuB,CAAC,CAAC;QAC3D,MAAM,EAAE,CAAC,cAAc,CAAC,CAAC,wCAAwC;QACjE,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;QAC3E,MAAM,EAAE,GAAG,MAAM,OAAO,CAAM,IAAI,CAAA,uBAAuB,CAAC,CAAC;QAC3D,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,eAAe,GAAG,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC;QACrE,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,EAAE,GAAG,MAAM,OAAO,CAAM,IAAI,CAAA,uBAAuB,CAAC,CAAC;QAC3D,EAAE,CAAC,WAAW,GAAG,OAAO,CAAC;QACzB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,YAAY,GAAG,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC;QAC/D,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,EAAE,GAAG,MAAM,OAAO,CAAM,IAAI,CAAA,uBAAuB,CAAC,CAAC;QAC3D,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,YAAY,EAAE;YAC1C,MAAM,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE;SAC5B,CAAC,CAAC;QACH,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC3B,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,EAAE,GAAG,MAAM,OAAO,CAAM,IAAI,CAAA,uBAAuB,CAAC,CAAC;QAC3D,MAAM,KAAK,GAAG,gBAAgB,CAAC,EAAE,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\nimport '../src/web-lion.js'\n\ndescribe('WebLion Component', () => {\n  it('should have a default currentView of \"register\"', async () => {\n    const el = await fixture<any>(html`<web-lion></web-lion>`);\n    await el.updateComplete; // Ensure the component is fully updated\n    expect(el.currentView).to.equal('register');\n  });\n\n  it('should render <web-register> when currentView is \"register\"', async () => {\n    const el = await fixture<any>(html`<web-lion></web-lion>`);\n    await el.updateComplete;\n    const registerElement = el.shadowRoot?.querySelector('web-register');\n    expect(registerElement).to.exist;\n  });\n\n  it('should render <web-panel> when currentView is \"panel\"', async () => {\n    const el = await fixture<any>(html`<web-lion></web-lion>`);\n    el.currentView = 'panel';\n    await el.updateComplete;\n    const panelElement = el.shadowRoot?.querySelector('web-panel');\n    expect(panelElement).to.exist;\n  });\n\n  it('should update currentView when handleNavigation is called', async () => {\n    const el = await fixture<any>(html`<web-lion></web-lion>`);\n    const event = new CustomEvent('navigation', {\n      detail: { target: 'panel' },\n    });\n    el.handleNavigation(event);\n    expect(el.currentView).to.equal('panel');\n  });\n\n  it('should apply correct styles', async () => {\n    const el = await fixture<any>(html`<web-lion></web-lion>`);\n    const style = getComputedStyle(el);\n    expect(style.display).to.equal('block');\n    expect(style.backgroundColor).to.equal('rgb(255, 255, 255)');\n  });\n});\n"]}